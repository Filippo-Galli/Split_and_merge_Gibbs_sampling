c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 5,
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 5,
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 5,
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 5,
#c_i = rep(0,101),
c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 5,
#c_i = rep(0,101),
c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 5,
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
setwd("C:/Users/clau7/OneDrive/Desktop/BAYES/project/Split_and_merge_Gibbs_sampling/realdata_analysis")
library(AntMAN)
library(mcclust.ext)
library(ggplot2)
library(tidyverse)
source("../code/complement_functions.R")
#=========================================================================================
# Loading data
#=========================================================================================
zoo=read.table("../data/zoo.data", h=F, sep=",")
nam = zoo$V1
groundTruth = zoo$V18
#classes = factor(groundTruth,labels=c("mammals", "birds", "reptiles", "fish",
#"amphibians", "insects", "mollusks"))
#names(groundTruth)<-classes
#=========================================================================================
# Data cleaning
#=========================================================================================
zoo = as.matrix(zoo[,-c(1,18)]+1)
zoo[,13] = ifelse(zoo[,13]==3,2,
ifelse(zoo[,13]==5,3,
ifelse(zoo[,13]==6,4,
ifelse(zoo[,13]==7,5,
ifelse(zoo[,13]==9,6,
1)))))
n = nrow(zoo)
p = ncol(zoo)
mm = apply(zoo, 2, function(x){length(table(x))})
#=========================================================================================
# Neal sampler
#=========================================================================================
## Obbligatorie per Filippo perchÃ© RcppGSL non trova le librerie GSL e nemmeno RcppGSL.h
# First, use the explicit include path from RcppGSL
Sys.setenv("PKG_CXXFLAGS" = paste0("-I/home/filippo/R/x86_64-pc-linux-gnu-library/4.4/RcppGSL/include",
" -I/usr/local/include"))
Sys.setenv("PKG_CXXFLAGS" = paste0('-I"C:/Users/clau7/AppData/Local/R/win-library/4.4/RcppGSL/include"',
" -I/usr/local/include"))
# Include full library paths and libraries
Sys.setenv("PKG_LIBS" = "-L/usr/local/lib -lgsl -lgslcblas -lm")
u = c(rep(6,12),3,rep(6,3))
v = c(rep(0.25,12),0.5,rep(0.25,3))
Rcpp::sourceCpp("../code/test.cpp")
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
Rcpp::sourceCpp("../code/test.cpp")
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
L_plurale <- c(7)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
warnings()
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
warnings()
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 10,
L = 7,
#c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 10,
L = 7,
#c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = unlist(groundTruth),
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = unlist(groundTruth),
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = unlist(groundTruth),
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = unlist(groundTruth),
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = unlist(groundTruth),
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 10,
L = 7,
#c_i = unlist(groundTruth),
c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
Rcpp::sourceCpp("../code/test.cpp")
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
Rcpp::sourceCpp("../code/test.cpp")
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1,
L = 7,
#c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1000,
L = 7,
#c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
c_i = unlist(groundTruth)
c_i
rm(c_i)
results <- run_markov_chain(data = zoo,
attrisize = mm,
gamma = 0.68,
v = v,
w = u,
verbose = 0,
m = 3,
iterations = 1000,
L = 7,
c_i = unlist(groundTruth),
#c_i = rep(0,101),
#c_i = seq(1,101),
burnin = 0,
neal8 = FALSE)
